var backgroundColors = [194,153,58];
var generalDNA = [0,0,0,25]; // 0=red,1=blue,2=green,3=size
var fps = 50;
var mutationRate = 15;
var topFitness = 0;
var generation = 0;
var numberOfOrganisms = 5;
var frames = 0;
var maxFitness = 100;

var organisms = [];
var predator;

function setup() { 
  createCanvas(600,300);
  frameRate(fps);
  predator = new Predator(backgroundColors[0],backgroundColors[1],backgroundColors[2], 15);
  spawnNewOrganisms();
}

function draw() {
  frameRate(fps);
  background(backgroundColors[0],backgroundColors[1],backgroundColors[2]);
  
  fill(0);
  textSize(10);
  text("LEFT and RIGHT arrows to change FPS",5,10);
  text("UP and DOWN arrows to change mutation rate", 5, 20);
  text("FPS:" + fps, 5, 30);
  text("Mutation rate:" + mutationRate, 5, 40);
  text("Frames:" + frames, 5, 50);
  text("Max Fitness:" + (100 - maxFitness), 5, 60);
  text("General DNA:" + "r:" + generalDNA[0]+ " g:" +generalDNA[1] + " b:" +generalDNA[2]+ " s:" +generalDNA[3], 5, 70);
  noStroke();
  fill(generalDNA[0],generalDNA[1],generalDNA[2]);
  rect(5,100, generalDNA[3],generalDNA[3]);
  
  for(var i = 0; i < organisms.length; i++){
    organisms[i].update();
    
    predator.select(organisms[i]);
    organisms[i].fitness = Math.round(predator.selectPercent);
    text(organisms[i].fitness + "%",organisms[i].xPos, organisms[i].yPos + 50);
  }
  
  for(var j = 0; j < organisms.length ; j++){
    if(predator.select(organisms[j])){
      organisms.splice(j, 1);
    }
  }
  
  if(organisms.length === 1){
    if(organisms[0].fitness < maxFitness){
      maxFitness = organisms[0].fitness;
      for(var k = 0; k < 4; k++){
        generalDNA[k] = organisms[0].organismDNA[k];
      }
      console.log("DNA updated");
    }
    spawnNewOrganisms();
    console.log("spawned");
  }
  //console.log(organisms.length);
  //text("test", 50,50);
  frames++;
} 

function keyPressed(){
  if(keyCode === LEFT_ARROW){
    fps--;
  }else if(keyCode === RIGHT_ARROW){
    fps++;
  }else if(keyCode === UP_ARROW){
    mutationRate++;
  }else if(keyCode === DOWN_ARROW){
    mutationRate--;
  }else if(key === ' '){
    spawnNewOrganisms();
  }
}

function spawnNewOrganisms(){
  organisms = [];
    for(var i = 0; i < numberOfOrganisms; i++){      
      organisms.push(new Organism(i*50 + 150,150,generalDNA[0],generalDNA[1],generalDNA[2],generalDNA[3]));
      organisms[i].mutate(mutationRate);      
    }
}
function Organism(x,y,r,g,b,s){
  this.xPos = x;
  this.yPos = y;
  this.fitness = 0;
  this.organismDNA = [r,g,b,s];
  
  this.mutate = function(mutationRate){
    if(Math.random() < 0.5 && this.organismDNA[0] > 0){
      this.organismDNA[0] += (Math.floor(Math.random() * mutationRate) + 1) * -1;
    }else{
      this.organismDNA[0] += (Math.floor(Math.random() * mutationRate) + 1);
    }
    if(Math.random() < 0.5 && this.organismDNA[1] > 0){
      this.organismDNA[1] += (Math.floor(Math.random() * mutationRate) + 1) * -1;
    }else{
      this.organismDNA[1] += (Math.floor(Math.random() * mutationRate) + 1);
    }
    if(Math.random() < 0.5 && this.organismDNA[2] > 0){
      this.organismDNA[2] += (Math.floor(Math.random() * mutationRate) + 1) * -1;
    }else{
      this.organismDNA[2] += (Math.floor(Math.random() * mutationRate) + 1);
    }
    if(Math.random() < 0.5 && this.organismDNA[3] > 15){
      this.organismDNA[3] += (Math.floor(Math.random() * (mutationRate * .25)) + 1) * -1;
    }else{
      this.organismDNA[3] += (Math.floor(Math.random() * (mutationRate * .25)) + 1);
    }
  }
  
  this.update = function(){
    //noStroke();
    fill(this.organismDNA[0],this.organismDNA[1],this.organismDNA[2]);
    rect(x,y,this.organismDNA[3],this.organismDNA[3]);
    //this.fitness++;
  }
}
function Predator(r,g,b,s){
  this.cannotSee = [r,g,b,s];
  this.selectPercent = 0;
  
  this.select = function(organism){
    this.percent = 0;
    this.percent += (Math.abs(this.cannotSee[0] - organism.organismDNA[0])) * 0.098;
    this.percent += (Math.abs(this.cannotSee[1] - organism.organismDNA[1])) * 0.098;
    this.percent += (Math.abs(this.cannotSee[2] - organism.organismDNA[2])) * 0.098;
    this.percent += (Math.abs(this.cannotSee[3] - organism.organismDNA[3])) * 0.5;
    this.selectPercent = this.percent;
    if((Math.floor(Math.random() * (100 / this.percent)) + 1) === 1){
      return true;
    }else{
      return false;
    }
  }
}
